#!/bin/bash

statusfile=`mktemp status.XXX`

updatepkgbuild() {
	pkg=$1
	pkgbuild=$pkg/PKGBUILD

	curl -s https://aur.archlinux.org/packages/${pkg:0:2}/$pkg/$pkg.tar.gz | /bin/tar -xz 2>/dev/null

	if $(git status -s | grep -q " $pkgbuild"); then
		# modified pkgbuild

		if $(git diff $pkgbuild | grep -q "^-epoch="); then
			# newer epoch, flip tables
			echo "$pkg : new epoch, /fliptables" >> $statusfile

		elif $(git diff $pkgbuild | grep -q "^-pkgver="); then
			# modified pkgver
			oldver=$(git diff $pkgbuild | grep "^-pkgver=" | cut -d= -f2)
			newver=$(git diff $pkgbuild | grep "^+pkgver=" | cut -d= -f2)

			if [[ "$oldver" > "$newver" ]]; then
				# older pkgver, revert it
				git checkout -f $pkgbuild >/dev/null 2>&1
			else
				# newer pkgver, announce it
				echo "$pkg : $oldver => $newver" >> $statusfile
			fi

		elif $(git diff $pkgbuild | grep -q "^-pkgrel="); then
			# modified pkgrel
			pkgver=$(git diff $pkgbuild | grep "^ pkgver=" | cut -d= -f2)
			oldrel=$(git diff $pkgbuild | grep "^-pkgrel=" | cut -d= -f2)
			newrel=$(git diff $pkgbuild | grep "^+pkgrel=" | cut -d= -f2)

			if [[ "$oldrel" > "$newrel" ]]; then
				# older pkgrel, revert it
				git checkout -f $pkgbuild >/dev/null 2>&1
			else
				# newer pkgrel, announce it
				echo "$pkg : $pkgver-$oldrel => $pkgver-$newrel" >> $statusfile
			fi

		fi
	fi
}

if [[ $# > 0 ]]; then
	echo "Importing PKGBUILDs from AUR..."

	until [ -z "$1" ]
	do
		updatepkgbuild $1
		shift
	done

else
	echo -n "Updating PKGBUILDs from AUR..."

	counter=0

	for pkg in $(ls */PKGBUILD | grep -v jreese | sed 's@/.*$@@'); do
		echo -n "."
		updatepkgbuild $pkg &

		counter=$((counter + 1))
		if [[ $counter == 3 ]]
		then
			counter=0
			wait
		fi
	done
	echo

fi

wait

cat $statusfile
rm $statusfile
echo
echo "Done"
